buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'net.researchgate.release' version '2.6.0'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

group 'com.virtlink'
version '0.0.1-SNAPSHOT'
sourceCompatibility = "$java_version"
targetCompatibility = "$java_version"
mainClassName = 'com.virtlink.gator.ProgramKt'
defaultTasks 'run'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile     "com.xenomachina:kotlin-argparser:$argparser_version"
    compile     "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile     "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile     "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"
    compile     "com.google.inject:guice:$guice_version"
    compile     "com.google.inject.extensions:guice-multibindings:$guice_version"
    compile     "com.google.inject.extensions:guice-assistedinject:$guice_version"
    compile     "commons-io:commons-io:$commons_io_version"
    compile     "org.slf4j:slf4j-api:$slf4j_version"
    compile     "ch.qos.logback:logback-classic:$logback_version"
    compile     "ch.qos.logback:logback-core:$logback_version"

    compile     "org.antlr:ST4:$st4_version"
//    compile     "org.webjars.bower:handlebars:$handlebars_version"
    compile     "com.github.jknack:handlebars:$handlebars_version"

    testCompile "junit:junit:$junit_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "$java_version"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "$java_version"
}

run {
    // Pass arguments to gradle by using -Pargs="<your arguments>"
    if(project.hasProperty('args')){
        args project.args.split('\\s+')
    }
}

release {
    tagTemplate = 'v${version}'
}